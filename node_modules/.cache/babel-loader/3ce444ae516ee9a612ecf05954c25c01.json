{"ast":null,"code":"var _jsxFileName = \"D:\\\\work\\\\react_login\\\\office\\\\src\\\\components\\\\Register.js\";\nimport React, { Component } from \"react\";\nimport utils from '../utils';\nimport CustomInput from \"./common/textinput\";\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (stateName, value) => {\n      this.setState({\n        [stateName]: value\n      });\n    };\n\n    this.onValidationError = ({\n      stateName,\n      errorMessage\n    }) => {\n      const errors = this.state.errors;\n      errors[stateName] = errorMessage;\n      this.setState({\n        errors\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const errors = utils.validateEntireDataset(this.fields, this.state);\n      this.setState({\n        errors: errors\n      }, () => {\n        if (Object.values(this.state.errors).every(stateValue => stateValue === \"\")) {\n          // error object has no error\n          const reqObj = {\n            fname: this.state.fname,\n            lname: this.state.lname,\n            email: this.state.email,\n            password: this.state.password\n          };\n          console.log(reqObj);\n          alert(\"success check console\");\n        }\n      });\n    };\n\n    this.fields = [{\n      id: 'fname',\n      name: 'first name',\n      stateName: 'fname',\n      stateDefaultValue: '',\n      type: 'text',\n      label: 'fname',\n      placeHolder: 'Please Enter fname',\n      isRequired: true,\n      className: 'form-control',\n      validations: [{\n        type: \"regex\",\n        value: /^[a-zA-Z]+$/,\n        error: \"Characters only\"\n      }]\n    }, {\n      id: 'lname',\n      name: 'last name',\n      stateName: 'lname',\n      stateDefaultValue: '',\n      type: 'text',\n      label: 'lname',\n      placeHolder: 'Please Enter lname',\n      isRequired: true,\n      className: 'form-control',\n      validations: [{\n        type: \"regex\",\n        value: /^[a-zA-Z]+$/,\n        error: \"Characters only\"\n      }]\n    }, {\n      id: 'email',\n      name: 'email',\n      stateName: 'email',\n      stateDefaultValue: '',\n      type: 'text',\n      label: 'email',\n      placeHolder: 'Please Enter Email',\n      isRequired: true,\n      className: 'form-control',\n      validations: [{\n        type: \"regex\",\n        value: /\\S+@\\S+\\.\\S+/,\n        error: \"email is incorrecrt\"\n      }]\n    }, {\n      id: 'password',\n      name: 'password',\n      stateName: 'password',\n      stateDefaultValue: '',\n      type: 'password',\n      label: 'password',\n      isRequired: true,\n      placeHolder: 'Please Enter Password',\n      className: 'form-control',\n      validations: [{\n        type: \"minLength\",\n        value: 8\n      }]\n    }, {\n      id: 'password2',\n      name: 'confirm password',\n      stateName: 'password2',\n      stateDefaultValue: '',\n      type: 'password',\n      label: 'confirm password enter',\n      isRequired: true,\n      placeHolder: 'Please Confirm Password',\n      className: 'form-control',\n      validations: [{\n        type: \"equalToOtherField\",\n        otherStateName: 'password',\n        otherFieldName: 'password'\n      }]\n    }];\n    this.state = {\n      errors: {}\n    };\n    this.fields.map(field => {\n      if (field.stateName) this.setState({\n        [field.stateName]: field.stateDefaultValue\n      });\n    });\n  }\n\n  // to show hide sidebar\n  // start\n  componentDidMount() {\n    document.querySelector(\"aside.left-sidebar\").style = \"display:none;\";\n    document.querySelector(\"body\").style = \"padding-left:0px;\";\n  }\n\n  componentWillUnmount() {\n    document.querySelector(\"aside.left-sidebar\").style = \"display:block;\";\n    document.querySelector(\"body\").style = \"padding-left:250px;\";\n  } //end\n\n\n  render() {\n    // if (this.props.isAuthenticated) {\n    //   this.props.history.push(\"/profile\");\n    // }\n    return React.createElement(\"div\", {\n      style: {\n        margin: \"60px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \" Register User \"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.fields.map(field => React.createElement(CustomInput, {\n      key: field.id,\n      handleChange: this.handleChange,\n      onValidationError: this.onValidationError,\n      stateObj: this.state,\n      id: field.id,\n      name: field.name,\n      stateName: field.stateName,\n      validations: field.validations,\n      isRequired: field.isRequired,\n      placeholder: field.placeHolder,\n      type: field.type,\n      className: field.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"offset-4 col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      name: \"submit\",\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}","map":{"version":3,"sources":["D:/work/react_login/office/src/components/Register.js"],"names":["React","Component","utils","CustomInput","Register","constructor","props","handleChange","stateName","value","setState","onValidationError","errorMessage","errors","state","handleSubmit","e","preventDefault","validateEntireDataset","fields","Object","values","every","stateValue","reqObj","fname","lname","email","password","console","log","alert","id","name","stateDefaultValue","type","label","placeHolder","isRequired","className","validations","error","otherStateName","otherFieldName","map","field","componentDidMount","document","querySelector","style","componentWillUnmount","render","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport utils from '../utils';\r\nimport CustomInput from \"./common/textinput\";\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.fields = [\r\n      {\r\n        id: 'fname',\r\n        name: 'first name',\r\n        stateName: 'fname',\r\n        stateDefaultValue: '',\r\n        type: 'text',\r\n        label: 'fname',\r\n        placeHolder: 'Please Enter fname',\r\n        isRequired: true,\r\n        className: 'form-control',\r\n        validations: [\r\n          { type: \"regex\", value: /^[a-zA-Z]+$/, error: \"Characters only\" }\r\n        ]\r\n      },\r\n      {\r\n        id: 'lname',\r\n        name: 'last name',\r\n        stateName: 'lname',\r\n        stateDefaultValue: '',\r\n        type: 'text',\r\n        label: 'lname',\r\n        placeHolder: 'Please Enter lname',\r\n        isRequired: true,\r\n        className: 'form-control',\r\n        validations: [\r\n          { type: \"regex\", value: /^[a-zA-Z]+$/, error: \"Characters only\" }\r\n        ]\r\n      },\r\n      {\r\n        id: 'email',\r\n        name: 'email',\r\n        stateName: 'email',\r\n        stateDefaultValue: '',\r\n        type: 'text',\r\n        label: 'email',\r\n        placeHolder: 'Please Enter Email',\r\n        isRequired: true,\r\n        className: 'form-control',\r\n        validations: [\r\n          {\r\n            type: \"regex\",\r\n            value: /\\S+@\\S+\\.\\S+/,\r\n            error: \"email is incorrecrt\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'password',\r\n        name: 'password',\r\n        stateName: 'password',\r\n        stateDefaultValue: '',\r\n        type: 'password',\r\n        label: 'password',\r\n        isRequired: true,\r\n        placeHolder: 'Please Enter Password',\r\n        className: 'form-control',\r\n        validations: [\r\n          {\r\n            type: \"minLength\",\r\n            value: 8\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'password2',\r\n        name: 'confirm password',\r\n        stateName: 'password2',\r\n        stateDefaultValue: '',\r\n        type: 'password',\r\n        label: 'confirm password enter',\r\n        isRequired: true,\r\n        placeHolder: 'Please Confirm Password',\r\n        className: 'form-control',\r\n        validations: [\r\n          {\r\n            type: \"equalToOtherField\",\r\n            otherStateName: 'password',\r\n            otherFieldName: 'password'\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n    this.fields.map(field => {\r\n      if (field.stateName) this.setState({ [field.stateName]: field.stateDefaultValue });\r\n    })\r\n  }\r\n  handleChange = (stateName, value) => {\r\n    this.setState({ [stateName]: value });\r\n  };\r\n\r\n  // to show hide sidebar\r\n  // start\r\n  componentDidMount() {\r\n    document.querySelector(\"aside.left-sidebar\").style = \"display:none;\"\r\n    document.querySelector(\"body\").style = \"padding-left:0px;\"\r\n  }\r\n  componentWillUnmount() {\r\n    document.querySelector(\"aside.left-sidebar\").style = \"display:block;\"\r\n    document.querySelector(\"body\").style = \"padding-left:250px;\"\r\n  }\r\n  //end\r\n\r\n  onValidationError = ({ stateName, errorMessage }) => {\r\n    const errors = this.state.errors;\r\n    errors[stateName] = errorMessage;\r\n    this.setState({ errors });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const errors = utils.validateEntireDataset(this.fields, this.state);\r\n    this.setState({ errors: errors }, () => {\r\n      if (Object.values(this.state.errors).every(stateValue => stateValue === \"\")) { // error object has no error\r\n        const reqObj = {\r\n          fname: this.state.fname,\r\n          lname: this.state.lname,\r\n          email: this.state.email,\r\n          password: this.state.password\r\n        };\r\n        console.log(reqObj);\r\n        alert(\"success check console\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // if (this.props.isAuthenticated) {\r\n    //   this.props.history.push(\"/profile\");\r\n    // }\r\n    return (\r\n      <div style={{ margin: \"60px\" }}>\r\n        <h3> Register User </h3>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.fields.map(field => (\r\n            <CustomInput\r\n              key={field.id}\r\n              handleChange={this.handleChange}\r\n              onValidationError={this.onValidationError}\r\n              stateObj={this.state}\r\n              id={field.id}\r\n              name={field.name}\r\n              stateName={field.stateName}\r\n              validations={field.validations}\r\n              isRequired={field.isRequired}\r\n              placeholder={field.placeHolder}\r\n              type={field.type}\r\n              className={field.className}\r\n            />\r\n          ))}\r\n          <div className=\"form-group row\">\r\n            <div className=\"offset-4 col-8\">\r\n              <button name=\"submit\" type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}