{"ast":null,"code":"var _jsxFileName = \"D:\\\\work\\\\react_login\\\\office\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport CustomInput from \"./common/textinput\";\nimport { getMaxListeners } from \"cluster\";\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBlur = (e, validations) => {\n      const errorMsgs = this.state.errors;\n      const fieldValue = e.target.value,\n            fieldName = e.target.name;\n\n      if (!fieldValue.trim()) {\n        errorMsgs[fieldName] = \"cant be empty\";\n        this.setState({\n          errors: errorMsgs\n        });\n        return;\n      }\n\n      validations.reverse().forEach(validation => {\n        const type = validation.type,\n              value = validation.value,\n              error = validation.error;\n\n        if (type === \"regex\" && !fieldValue.match(value)) {\n          errorMsgs[fieldName] = \"invalid \".concat(fieldName, \", \").concat(error);\n        } else if (type === \"minLength\" && fieldValue.length < value) {\n          errorMsgs[fieldName] = \"\".concat(fieldName, \" should have atleast \").concat(value, \" characters\");\n        } else {\n          errorMsgs[fieldName] = \"\";\n        }\n      });\n      this.setState({\n        errors: errorMsgs\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.username === this.state.saveCredential.username && this.state.password === this.state.saveCredential.password) {\n        alert(\"Error: Credentials Des\", this.state.errors);\n      }\n    };\n\n    this.state = {\n      saveCredential: {\n        email: 'raviojha@getMaxListeners.com',\n        password: '12345678'\n      },\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"clearfix page-xy-100 flexbox login-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 justify-item-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-auto login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 block-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"images/logo.png\",\n      className: \"center-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      action: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      handleBlur: this.handleBlur,\n      validations: [{\n        type: \"regex\",\n        value: /\\S+@\\S+\\.\\S+/,\n        error: \"email is incorrecrt\"\n      }],\n      handleChange: this.handleChange,\n      id: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      type: \"email\",\n      className: \"form-control\",\n      errors: this.state.errors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(CustomInput, {\n      handleBlur: this.handleBlur,\n      validations: [{\n        type: \"minLength\",\n        value: 8\n      }],\n      handleChange: this.handleChange,\n      id: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      type: \"password\",\n      className: \"form-control\",\n      errors: this.state.errors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"remember\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), \" Remember me\")), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Submit\")))))));\n  }\n\n}","map":{"version":3,"sources":["D:/work/react_login/office/src/components/Login.js"],"names":["React","Component","CustomInput","getMaxListeners","Login","constructor","props","handleBlur","e","validations","errorMsgs","state","errors","fieldValue","target","value","fieldName","name","trim","setState","reverse","forEach","validation","type","error","match","length","handleSubmit","preventDefault","username","saveCredential","password","alert","email","render","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport CustomInput from \"./common/textinput\";\r\nimport { getMaxListeners } from \"cluster\";\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      saveCredential:{\r\n        email:'raviojha@getMaxListeners.com',\r\n        password : '12345678'\r\n      },\r\n      username:\"\",\r\n      password :\"\",\r\n      errors: {}\r\n    }\r\n  }\r\n  handleBlur = (e, validations) => {\r\n    const errorMsgs = this.state.errors;\r\n    const fieldValue = e.target.value,\r\n      fieldName = e.target.name;\r\n    if (!fieldValue.trim()) {\r\n      errorMsgs[fieldName] = \"cant be empty\";\r\n      this.setState({ errors: errorMsgs });\r\n      return;\r\n    }\r\n    validations.reverse().forEach(validation => {\r\n      const { type, value, error } = validation;\r\n      if (type === \"regex\" && !fieldValue.match(value)) {\r\n        errorMsgs[fieldName] = `invalid ${fieldName}, ${error}`;\r\n      } else if (type === \"minLength\" && fieldValue.length < value) {\r\n        errorMsgs[\r\n          fieldName\r\n        ] = `${fieldName} should have atleast ${value} characters`;\r\n      } else {\r\n        errorMsgs[fieldName] = ``;\r\n      }\r\n    });\r\n    this.setState({ errors: errorMsgs });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.username ===this.state.saveCredential.username && this.state.password ===this.state.saveCredential.password) {\r\n      alert(\"Error: Credentials Des\", this.state.errors);\r\n    }\r\n\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"clearfix page-xy-100 flexbox login-page\">\r\n          <div className=\"container align-items-center\">\r\n            <div className=\"col-md-12 justify-item-center\">\r\n              <div className=\"col-sm-auto login-form\">\r\n                <div className=\"col-md-12 block-logo\">\r\n                  <img src=\"images/logo.png\" className=\"center-block\" />\r\n                </div>\r\n                <form action=\"\">\r\n                  {/* <div className=\"form-group\">\r\n                    <label for=\"email\">Email:</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      id=\"email\"\r\n                      placeholder=\"Enter email\"\r\n                      name=\"email\"\r\n                    />\r\n                  </div> */}\r\n                  <CustomInput\r\n                    handleBlur={this.handleBlur}\r\n                    validations={[\r\n                      {\r\n                        type: \"regex\",\r\n                        value: /\\S+@\\S+\\.\\S+/,\r\n                        error: \"email is incorrecrt\"\r\n                      }\r\n                    ]}\r\n                    handleChange={this.handleChange}\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    errors={this.state.errors}\r\n                  />\r\n                  {/* <div className=\"form-group\">\r\n                    <label for=\"pwd\">Password:</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      id=\"pwd\"\r\n                      placeholder=\"Enter password\"\r\n                      name=\"pwd\"\r\n                    />\r\n                  </div> */}\r\n                  <CustomInput\r\n                    handleBlur={this.handleBlur}\r\n                    validations={[\r\n                      {\r\n                        type: \"minLength\",\r\n                        value: 8\r\n                      }\r\n                    ]}\r\n                    handleChange={this.handleChange}\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    errors={this.state.errors}\r\n                  />\r\n                  <div className=\"checkbox\">\r\n                    <label>\r\n                      <input type=\"checkbox\" name=\"remember\" /> Remember me\r\n                    </label>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"btn btn-default\">\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}