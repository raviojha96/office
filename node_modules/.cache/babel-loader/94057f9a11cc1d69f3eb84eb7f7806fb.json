{"ast":null,"code":"var _jsxFileName = \"D:\\\\work\\\\react_login\\\\office\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport utils from \"../utils\";\nimport { isEqual } from \"lodash\";\nimport CustomInput from \"./common/textinput\";\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (stateName, value) => {\n      this.setState({\n        [stateName]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const errors = utils.validateEntireDataset(this.fields, this.state);\n      this.setState({\n        errors: errors\n      }, () => {\n        if (Object.values(this.state.errors).every(stateValue => stateValue === \"\")) {\n          // error object has no error\n          const userObj = {\n            email: this.state.email,\n            password: this.state.password\n          };\n\n          if (isEqual(this.state.correctCredentials, userObj)) {\n            this.props.changeAuthState(userObj);\n            this.props.history.push(\"/profile\");\n          } else {\n            const errors = this.state.errors;\n            errors.password = \"Invalid Credentials\";\n            this.setState({\n              errors: errors\n            });\n          }\n        }\n      });\n    };\n\n    this.onValidationError = ({\n      stateName,\n      errorMessage\n    }) => {\n      const errors = this.state.errors;\n      errors[stateName] = errorMessage;\n      this.setState({\n        errors\n      });\n    };\n\n    this.fields = [{\n      id: \"email\",\n      name: \"email\",\n      stateName: \"email\",\n      stateDefaultValue: \"\",\n      type: \"text\",\n      label: \"email\",\n      placeHolder: \"Please Enter Email\",\n      isRequired: true,\n      className: \"form-control\",\n      validations: [{\n        type: \"regex\",\n        value: /\\S+@\\S+\\.\\S+/,\n        error: \"email is incorrecrt\"\n      }]\n    }, {\n      id: \"password\",\n      name: \"password\",\n      stateName: \"password\",\n      stateDefaultValue: \"\",\n      type: \"password\",\n      label: \"password\",\n      isRequired: true,\n      placeHolder: \"Please Enter Password\",\n      className: \"form-control\",\n      validations: []\n    }];\n    this.state = {\n      correctCredentials: {\n        email: \"ravi@gmail.com\",\n        password: \"12345678\"\n      },\n      errors: {},\n      isSubmitDisabled: false\n    };\n    this.fields.map(field => {\n      if (field.stateName) this.setState({\n        [field.stateName]: field.stateDefaultValue\n      });\n    });\n  }\n\n  componentDidMount() {\n    const leftBar = document.querySelector(\"aside.left-sidebar\");\n    if (leftBar) leftBar.style = \"display:none;\";\n    document.querySelector(\"body\").style = \"padding-left:0px;\";\n  }\n\n  componentWillUnmount() {\n    const leftBar = document.querySelector(\"aside.left-sidebar\");\n    if (leftBar) leftBar.style = \"display:block;\";\n    document.querySelector(\"body\").style = \"padding-left:250px;\";\n  }\n\n  render() {\n    if (this.props.isAuthenticated) {\n      this.props.history.push(\"/profile\");\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"clearfix page-xy-100 flexbox login-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 justify-item-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-auto login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 block-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"images/logo.png\",\n      className: \"center-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), this.fields.map(field => React.createElement(CustomInput, {\n      key: field.id,\n      handleBlur: this.handleBlur,\n      handleChange: this.handleChange,\n      onValidationError: this.onValidationError,\n      stateObj: this.state,\n      id: field.id,\n      name: field.name,\n      stateName: field.stateName,\n      validations: field.validations,\n      isRequired: field.isRequired,\n      placeholder: field.placeHolder,\n      type: field.type,\n      className: field.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"remember\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), \" Remember me\")), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      disabled: this.state.isSubmitDisabled,\n      className: \"btn btn-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Submit\"))))));\n  }\n\n}","map":{"version":3,"sources":["D:/work/react_login/office/src/components/Login.js"],"names":["React","Component","utils","isEqual","CustomInput","Login","constructor","props","handleChange","stateName","value","setState","handleSubmit","e","preventDefault","errors","validateEntireDataset","fields","state","Object","values","every","stateValue","userObj","email","password","correctCredentials","changeAuthState","history","push","onValidationError","errorMessage","id","name","stateDefaultValue","type","label","placeHolder","isRequired","className","validations","error","isSubmitDisabled","map","field","componentDidMount","leftBar","document","querySelector","style","componentWillUnmount","render","isAuthenticated","handleBlur"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport utils from \"../utils\";\r\nimport { isEqual } from \"lodash\";\r\nimport CustomInput from \"./common/textinput\";\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.fields = [\r\n      {\r\n        id: \"email\",\r\n        name: \"email\",\r\n        stateName: \"email\",\r\n        stateDefaultValue: \"\",\r\n        type: \"text\",\r\n        label: \"email\",\r\n        placeHolder: \"Please Enter Email\",\r\n        isRequired: true,\r\n        className: \"form-control\",\r\n        validations: [\r\n          {\r\n            type: \"regex\",\r\n            value: /\\S+@\\S+\\.\\S+/,\r\n            error: \"email is incorrecrt\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: \"password\",\r\n        name: \"password\",\r\n        stateName: \"password\",\r\n        stateDefaultValue: \"\",\r\n        type: \"password\",\r\n        label: \"password\",\r\n        isRequired: true,\r\n        placeHolder: \"Please Enter Password\",\r\n        className: \"form-control\",\r\n        validations: []\r\n      }\r\n    ];\r\n    this.state = {\r\n      correctCredentials: {\r\n        email: \"ravi@gmail.com\",\r\n        password: \"12345678\"\r\n      },\r\n      errors: {},\r\n      isSubmitDisabled: false\r\n    };\r\n\r\n    this.fields.map(field => {\r\n      if (field.stateName)\r\n        this.setState({ [field.stateName]: field.stateDefaultValue });\r\n    });\r\n  }\r\n\r\n  handleChange = (stateName, value) => {\r\n    this.setState({ [stateName]: value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const leftBar = document.querySelector(\"aside.left-sidebar\");\r\n    if (leftBar) leftBar.style = \"display:none;\";\r\n    document.querySelector(\"body\").style = \"padding-left:0px;\";\r\n  }\r\n  componentWillUnmount() {\r\n    const leftBar = document.querySelector(\"aside.left-sidebar\");\r\n    if (leftBar) leftBar.style = \"display:block;\";\r\n    document.querySelector(\"body\").style = \"padding-left:250px;\";\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const errors = utils.validateEntireDataset(this.fields, this.state);\r\n    this.setState({ errors: errors }, () => {\r\n      if (\r\n        Object.values(this.state.errors).every(stateValue => stateValue === \"\")\r\n      ) {\r\n        // error object has no error\r\n\r\n        const userObj = {\r\n          email: this.state.email,\r\n          password: this.state.password\r\n        };\r\n\r\n        if (isEqual(this.state.correctCredentials, userObj)) {\r\n          this.props.changeAuthState(userObj);\r\n          this.props.history.push(\"/profile\");\r\n        } else {\r\n          const errors = this.state.errors;\r\n          errors.password = \"Invalid Credentials\";\r\n          this.setState({ errors: errors });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  onValidationError = ({ stateName, errorMessage }) => {\r\n    const errors = this.state.errors;\r\n    errors[stateName] = errorMessage;\r\n    this.setState({ errors });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.isAuthenticated) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n    return (\r\n      <>\r\n        <div className=\"clearfix page-xy-100 flexbox login-page\">\r\n          <div className=\"container align-items-center\">\r\n            <div className=\"col-md-12 justify-item-center\">\r\n              <div className=\"col-sm-auto login-form\">\r\n                <div className=\"col-md-12 block-logo\">\r\n                  <img src=\"images/logo.png\" className=\"center-block\" />\r\n                </div>\r\n                {this.fields.map(field => (\r\n                  <CustomInput\r\n                    key={field.id}\r\n                    handleBlur={this.handleBlur}\r\n                    handleChange={this.handleChange}\r\n                    onValidationError={this.onValidationError}\r\n                    stateObj={this.state}\r\n                    id={field.id}\r\n                    name={field.name}\r\n                    stateName={field.stateName}\r\n                    validations={field.validations}\r\n                    isRequired={field.isRequired}\r\n                    placeholder={field.placeHolder}\r\n                    type={field.type}\r\n                    className={field.className}\r\n                  />\r\n                ))}\r\n                <div className=\"checkbox\">\r\n                  <label>\r\n                    <input type=\"checkbox\" name=\"remember\" /> Remember me\r\n                  </label>\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  onClick={this.handleSubmit}\r\n                  disabled={this.state.isSubmitDisabled}\r\n                  className=\"btn btn-default\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}