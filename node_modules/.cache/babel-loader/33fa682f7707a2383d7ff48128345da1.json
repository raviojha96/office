{"ast":null,"code":"var _jsxFileName = \"D:\\\\work\\\\react_login\\\\office\\\\src\\\\components\\\\Register.js\";\nimport React, { Component } from \"react\";\nimport CustomInput from \"./common/textinput\";\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleValidation = fieldName => {\n      const _this$state = this.state,\n            fname = _this$state.fname,\n            lname = _this$state.lname,\n            email = _this$state.email,\n            password1 = _this$state.password1,\n            password2 = _this$state.password2;\n      const errors = this.state.errors;\n      var isValid = true;\n\n      if (!fname) {\n        isValid = false;\n        errors.fname = \"cannont be empty\";\n      } else if (fname) {\n        if (!fname.match(/^[a-zA-Z]+$/)) {\n          isValid = false;\n          errors.fname = \"Letters only\";\n        }\n      }\n\n      if (!lname) {\n        isValid = false;\n        errors.lname = \"cannont be empty\";\n      } else if (lname) {\n        if (!lname.match(/^[a-zA-Z]+$/)) {\n          isValid = false;\n          errors.lname = \"Letters only\";\n        }\n      }\n\n      if (!email) {\n        isValid = false;\n        errors.email = \"cannont be empty\";\n      } else if (email) {\n        if (!email.match(/\\S+@\\S+\\.\\S+/)) {\n          isValid = false;\n          errors.email = \"Invalid Email\";\n        }\n      }\n\n      if (!password1) {\n        isValid = false;\n        errors.pass = \"cannont be empty\";\n      } else if (password1) {\n        if (!password1.match(/^[a-zA-Z0-9]+$/)) {\n          isValid = false;\n          errors.password1 = \"Special charcters not allowed\";\n        } else if (password1 !== password2) {\n          isValid = false;\n          errors.pass = \"credentials not matched\";\n        }\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return isValid;\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleBlur = (e, validations) => {\n      const errorMsgs = this.state.errors;\n      const fieldValue = e.target.value,\n            fieldName = e.target.name;\n      validations.forEach(validation => {\n        if (!fieldValue.match(validation.regex)) {\n          errorMsgs[fieldName] = \"\".concat(errorMsgs[fieldName], \" \").concat(validation.error);\n        }\n      });\n      this.setState({\n        errors: errorMsgs\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (!this.handleValidation()) {} else {\n        alert(this.state.fields.fname);\n      }\n    };\n\n    this.state = {\n      fname: \"\",\n      lname: \"\",\n      email: \"\",\n      password1: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  } //validation\n\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        margin: \"60px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      onBlur: this.handleValidatio,\n      handleBlur: this.handleBlur,\n      validations: [{\n        regex: /^[a-zA-Z]+$/,\n        error: \"kuch to bhi\"\n      }],\n      onChange: this.handleChange,\n      id: \"fname\",\n      name: \"fname\",\n      placeholder: \"First Name\",\n      type: \"text\",\n      className: \"form-control\",\n      errors: this.state.errors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      id: \"lname\",\n      name: \"lname\",\n      placeholder: \"Last Name\",\n      type: \"text\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.state.errors.lname))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      id: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      type: \"text\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.state.errors.email))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      id: \"pass\",\n      name: \"password1\",\n      placeholder: \"Enter Your Password\",\n      type: \"password\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.state.errors.pass))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"pass\",\n      name: \"password2\",\n      placeholder: \"Repeat Your Password\",\n      type: \"password\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, this.state.errors.repass))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"offset-4 col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      name: \"submit\",\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}","map":{"version":3,"sources":["D:/work/react_login/office/src/components/Register.js"],"names":["React","Component","CustomInput","Register","constructor","props","handleValidation","fieldName","state","fname","lname","email","password1","password2","errors","isValid","match","pass","setState","handleChange","e","target","name","value","handleBlur","validations","errorMsgs","fieldValue","forEach","validation","regex","error","handleSubmit","preventDefault","alert","fields","render","margin","handleValidatio","color","repass"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport CustomInput from \"./common/textinput\";\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fname: \"\",\r\n      lname: \"\",\r\n      email: \"\",\r\n      password1: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  //validation\r\n  handleValidation = fieldName => {\r\n    const { fname, lname, email, password1, password2 } = this.state;\r\n    const errors = this.state.errors;\r\n    var isValid = true;\r\n\r\n    if (!fname) {\r\n      isValid = false;\r\n      errors.fname = \"cannont be empty\";\r\n    } else if (fname) {\r\n      if (!fname.match(/^[a-zA-Z]+$/)) {\r\n        isValid = false;\r\n        errors.fname = \"Letters only\";\r\n      }\r\n    }\r\n    if (!lname) {\r\n      isValid = false;\r\n      errors.lname = \"cannont be empty\";\r\n    } else if (lname) {\r\n      if (!lname.match(/^[a-zA-Z]+$/)) {\r\n        isValid = false;\r\n        errors.lname = \"Letters only\";\r\n      }\r\n    }\r\n    if (!email) {\r\n      isValid = false;\r\n      errors.email = \"cannont be empty\";\r\n    } else if (email) {\r\n      if (!email.match(/\\S+@\\S+\\.\\S+/)) {\r\n        isValid = false;\r\n        errors.email = \"Invalid Email\";\r\n      }\r\n    }\r\n    if (!password1) {\r\n      isValid = false;\r\n      errors.pass = \"cannont be empty\";\r\n    } else if (password1) {\r\n      if (!password1.match(/^[a-zA-Z0-9]+$/)) {\r\n        isValid = false;\r\n        errors.password1 = \"Special charcters not allowed\";\r\n      } else if (password1 !== password2) {\r\n        isValid = false;\r\n        errors.pass = \"credentials not matched\";\r\n      }\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return isValid;\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleBlur = (e, validations) => {\r\n    const errorMsgs = this.state.errors;\r\n    const fieldValue = e.target.value,\r\n      fieldName = e.target.name;\r\n    validations.forEach(validation => {\r\n      if (!fieldValue.match(validation.regex)) {\r\n        errorMsgs[fieldName] = `${errorMsgs[fieldName]} ${validation.error}`;\r\n      }\r\n    });\r\n    this.setState({ errors: errorMsgs });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (!this.handleValidation()) {\r\n    } else {\r\n      alert(this.state.fields.fname);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ margin: \"60px\" }}>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group row\">\r\n            <CustomInput\r\n              onBlur={this.handleValidatio}\r\n              handleBlur={this.handleBlur}\r\n              validations={[\r\n                { regex: /^[a-zA-Z]+$/, error: \"kuch to bhi\" }\r\n              ]}\r\n              onChange={this.handleChange}\r\n              id=\"fname\"\r\n              name=\"fname\"\r\n              placeholder=\"First Name\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              errors={this.state.errors}\r\n            />\r\n            {/* <label className=\"col-4\"></label>\r\n            <div className=\"col-8\">\r\n              <input\r\n                onBlur={this.handleValidatio}\r\n                validation={/^[a-zA-Z]+$/}\r\n                onChange={this.handleChange}\r\n                id=\"fname\"\r\n                name=\"fname\"\r\n                placeholder=\"First Name\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n              />\r\n              <span style={{ color: \"red\" }}>{this.state.errors.fname}</span>\r\n            </div> */}\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-4\"></label>\r\n            <div className=\"col-8\">\r\n              <input\r\n                onChange={this.handleChange}\r\n                id=\"lname\"\r\n                name=\"lname\"\r\n                placeholder=\"Last Name\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n              />\r\n              <span style={{ color: \"red\" }}>{this.state.errors.lname}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-4\"></label>\r\n            <div className=\"col-8\">\r\n              <input\r\n                onChange={this.handleChange}\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n              />\r\n              <span style={{ color: \"red\" }}>{this.state.errors.email}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-4\"></label>\r\n            <div className=\"col-8\">\r\n              <input\r\n                onChange={this.handleChange}\r\n                id=\"pass\"\r\n                name=\"password1\"\r\n                placeholder=\"Enter Your Password\"\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n              />\r\n              <span style={{ color: \"red\" }}>{this.state.errors.pass}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-4\"></label>\r\n            <div className=\"col-8\">\r\n              <input\r\n                id=\"pass\"\r\n                name=\"password2\"\r\n                placeholder=\"Repeat Your Password\"\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n              />\r\n              <span style={{ color: \"red\" }}>{this.state.errors.repass}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <div className=\"offset-4 col-8\">\r\n              <button name=\"submit\" type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}