{"ast":null,"code":"var _jsxFileName = \"D:\\\\work\\\\react_login\\\\office\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport CustomInput from \"./common/textinput\";\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBlur = (e, validations) => {\n      const errorMsgs = this.state.errors;\n      const fieldValue = e.target.value,\n            fieldName = e.target.name;\n\n      if (!fieldValue.trim()) {\n        errorMsgs[fieldName] = \"cant be empty\";\n        this.setState({\n          errors: errorMsgs\n        });\n        return;\n      }\n\n      validations.reverse().forEach(validation => {\n        const type = validation.type,\n              value = validation.value,\n              error = validation.error;\n\n        if (type === \"regex\" && !fieldValue.match(value)) {\n          errorMsgs[fieldName] = \"invalid \".concat(fieldName, \", \").concat(error);\n        } else if (type === \"minLength\" && fieldValue.length < value) {\n          errorMsgs[fieldName] = \"\".concat(fieldName, \" should have atleast \").concat(value, \" characters\");\n        } else {\n          errorMsgs[fieldName] = \"\";\n        }\n      });\n      this.setState({\n        errors: errorMsgs\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"clearfix page-xy-100 flexbox login-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 justify-item-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-auto login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 block-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"images/logo.png\",\n      className: \"center-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      action: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      handleBlur: this.handleBlur,\n      validations: [{\n        type: \"regex\",\n        value: /\\S+@\\S+\\.\\S+/,\n        error: \"email is incorrecrt\"\n      }],\n      handleChange: this.handleChange,\n      id: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      type: \"email\",\n      className: \"form-control\",\n      errors: this.state.errors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(CustomInput, {\n      handleBlur: this.handleBlur,\n      validations: [{\n        type: \"minLength\",\n        value: 8\n      }],\n      handleChange: this.handleChange,\n      id: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      type: \"password\",\n      className: \"form-control\",\n      errors: this.state.errors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"remember\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), \" Remember me\")), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Submit\")))))));\n  }\n\n}","map":{"version":3,"sources":["D:/work/react_login/office/src/components/Login.js"],"names":["React","Component","CustomInput","Login","constructor","props","handleBlur","e","validations","errorMsgs","state","errors","fieldValue","target","value","fieldName","name","trim","setState","reverse","forEach","validation","type","error","match","length","email","password","render","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CustomInput from \"./common/textinput\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n  handleBlur = (e, validations) => {\n    const errorMsgs = this.state.errors;\n    const fieldValue = e.target.value,\n      fieldName = e.target.name;\n    if (!fieldValue.trim()) {\n      errorMsgs[fieldName] = \"cant be empty\";\n      this.setState({ errors: errorMsgs });\n      return;\n    }\n    validations.reverse().forEach(validation => {\n      const { type, value, error } = validation;\n      if (type === \"regex\" && !fieldValue.match(value)) {\n        errorMsgs[fieldName] = `invalid ${fieldName}, ${error}`;\n      } else if (type === \"minLength\" && fieldValue.length < value) {\n        errorMsgs[\n          fieldName\n        ] = `${fieldName} should have atleast ${value} characters`;\n      } else {\n        errorMsgs[fieldName] = ``;\n      }\n    });\n    this.setState({ errors: errorMsgs });\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"clearfix page-xy-100 flexbox login-page\">\n          <div className=\"container align-items-center\">\n            <div className=\"col-md-12 justify-item-center\">\n              <div className=\"col-sm-auto login-form\">\n                <div className=\"col-md-12 block-logo\">\n                  <img src=\"images/logo.png\" className=\"center-block\" />\n                </div>\n                <form action=\"\">\n                  {/* <div className=\"form-group\">\n                    <label for=\"email\">Email:</label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      id=\"email\"\n                      placeholder=\"Enter email\"\n                      name=\"email\"\n                    />\n                  </div> */}\n                  <CustomInput\n                    handleBlur={this.handleBlur}\n                    validations={[\n                      {\n                        type: \"regex\",\n                        value: /\\S+@\\S+\\.\\S+/,\n                        error: \"email is incorrecrt\"\n                      }\n                    ]}\n                    handleChange={this.handleChange}\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    type=\"email\"\n                    className=\"form-control\"\n                    errors={this.state.errors}\n                  />\n                  {/* <div className=\"form-group\">\n                    <label for=\"pwd\">Password:</label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"pwd\"\n                      placeholder=\"Enter password\"\n                      name=\"pwd\"\n                    />\n                  </div> */}\n                  <CustomInput\n                    handleBlur={this.handleBlur}\n                    validations={[\n                      {\n                        type: \"minLength\",\n                        value: 8\n                      }\n                    ]}\n                    handleChange={this.handleChange}\n                    id=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    className=\"form-control\"\n                    errors={this.state.errors}\n                  />\n                  <div className=\"checkbox\">\n                    <label>\n                      <input type=\"checkbox\" name=\"remember\" /> Remember me\n                    </label>\n                  </div>\n                  <button type=\"submit\" className=\"btn btn-default\">\n                    Submit\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}