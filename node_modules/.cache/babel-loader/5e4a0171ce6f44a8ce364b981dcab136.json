{"ast":null,"code":"var _jsxFileName = \"D:\\\\work\\\\react_login\\\\office\\\\src\\\\components\\\\Register.js\";\nimport React, { Component } from \"react\";\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleValidation = e => {\n      const fields = this.state.fields;\n      const errors = this.state.errors;\n      var isValid = true;\n\n      if (!fields.fname) {\n        isValid = false;\n        errors.fname = \"cannont be empty\";\n      } else if (fields.fname) {\n        if (!fields.fname.match(/^[a-zA-Z]+$/)) {\n          isValid = false;\n          errors.fname = \"Letters only\";\n        }\n      }\n\n      if (!fields.lname) {\n        isValid = false;\n        errors.lname = \"cannont be empty\";\n      } else if (fields.lname) {\n        if (!fields.lname.match(/^[a-zA-Z]+$/)) {\n          isValid = false;\n          errors.lname = \"Letters only\";\n        }\n      }\n\n      if (!fields.email) {\n        isValid = false;\n        errors.email = \"cannont be empty\";\n      } else if (fields.email) {\n        if (!fields.email.match(/\\S+@\\S+\\.\\S+/)) {\n          isValid = false;\n          errors.email = \"Invalid Email\";\n        }\n      }\n\n      if (!fields.pass) {\n        isValid = false;\n        errors.pass = \"cannont be empty\";\n      } else if (fields.pass) {\n        if (!fields.pass.match(/^[a-zA-Z0-9]+$/)) {\n          isValid = false;\n          errors.pass = \"Special charcters not allowed\";\n        } else if (this.state.fields.pass !== this.state.fields.repass) {\n          isValid = false;\n          errors.pass = \"credentials not matched\";\n        }\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return isValid;\n    };\n\n    this.handleChange = e => {\n      const fields = this.state.fields;\n      const key = e.target.name;\n      const value = e.target.value;\n      fields[key] = value;\n      this.setState({\n        fields: fields\n      });\n    };\n\n    this.handleSubmit = e => {\n      if (!this.handleValidation()) {} else {\n        alert(this.state.fields.fname);\n      }\n\n      e.preventDefault();\n    };\n\n    this.state = {\n      fields: {},\n      errors: {}\n    };\n  } //validation\n\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        margin: \"60px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onBlur: this.handleValidation,\n      onChange: this.handleChange,\n      id: \"fname\",\n      name: \"fname\",\n      placeholder: \"First Name\",\n      type: \"text\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.errors.fname))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      id: \"lname\",\n      name: \"lname\",\n      placeholder: \"Last Name\",\n      type: \"text\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.state.errors.lname))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      id: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      type: \"text\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.state.errors.email))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      id: \"pass\",\n      name: \"pass\",\n      placeholder: \"Enter Your Password\",\n      type: \"password\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.state.errors.pass))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"pass\",\n      name: \"repass\",\n      placeholder: \"Repeat Your Password\",\n      type: \"password\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.state.errors.repass))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"offset-4 col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      name: \"submit\",\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}","map":{"version":3,"sources":["D:/work/react_login/office/src/components/Register.js"],"names":["React","Component","Register","constructor","props","handleValidation","e","fields","state","errors","isValid","fname","match","lname","email","pass","repass","setState","handleChange","key","target","name","value","handleSubmit","alert","preventDefault","render","margin","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fields: {},\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  //validation\r\n  handleValidation = (e) => {\r\n    const fields = this.state.fields;\r\n    const errors = this.state.errors;\r\n    var isValid = true;\r\n\r\n    if (!fields.fname) {\r\n      isValid = false;\r\n      errors.fname = \"cannont be empty\";\r\n    } else if (fields.fname) {\r\n      if (!fields.fname.match(/^[a-zA-Z]+$/)) {\r\n        isValid = false;\r\n        errors.fname = \"Letters only\";\r\n      }\r\n    }\r\n    if (!fields.lname) {\r\n      isValid = false;\r\n      errors.lname = \"cannont be empty\";\r\n    } else if (fields.lname) {\r\n      if (!fields.lname.match(/^[a-zA-Z]+$/)) {\r\n        isValid = false;\r\n        errors.lname = \"Letters only\";\r\n      }\r\n    }\r\n    if (!fields.email) {\r\n      isValid = false;\r\n      errors.email = \"cannont be empty\";\r\n    } else if (fields.email) {\r\n      if (!fields.email.match(/\\S+@\\S+\\.\\S+/)) {\r\n        isValid = false;\r\n        errors.email = \"Invalid Email\";\r\n      }\r\n    }\r\n    if (!fields.pass) {\r\n      isValid = false;\r\n      errors.pass = \"cannont be empty\";\r\n    } else if (fields.pass) {\r\n      if (!fields.pass.match(/^[a-zA-Z0-9]+$/)) {\r\n        isValid = false;\r\n        errors.pass = \"Special charcters not allowed\";\r\n      } else if (this.state.fields.pass !== this.state.fields.repass) {\r\n        isValid = false;\r\n        errors.pass = \"credentials not matched\";\r\n      }\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return isValid;\r\n  };\r\n\r\n  handleChange = e => {\r\n    const fields = this.state.fields;\r\n    const key = e.target.name;\r\n    const value = e.target.value;\r\n    fields[key] = value;\r\n    this.setState({\r\n      fields: fields\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    if (!this.handleValidation()) {\r\n    } else {\r\n      alert(this.state.fields.fname);\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ margin: \"60px\" }}>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-4\"></label>\r\n            <div className=\"col-8\">\r\n              <input\r\n                onBlur={this.handleValidation}\r\n                onChange={this.handleChange}\r\n                id=\"fname\"\r\n                name=\"fname\"\r\n                placeholder=\"First Name\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n              />\r\n              <span style={{ color: \"red\" }}>{this.state.errors.fname}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-4\"></label>\r\n            <div className=\"col-8\">\r\n              <input\r\n                onChange={this.handleChange}\r\n                id=\"lname\"\r\n                name=\"lname\"\r\n                placeholder=\"Last Name\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n              />\r\n              <span style={{ color: \"red\" }}>{this.state.errors.lname}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-4\"></label>\r\n            <div className=\"col-8\">\r\n              <input\r\n                onChange={this.handleChange}\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n              />\r\n              <span style={{ color: \"red\" }}>{this.state.errors.email}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-4\"></label>\r\n            <div className=\"col-8\">\r\n              <input\r\n                onChange={this.handleChange}\r\n                id=\"pass\"\r\n                name=\"pass\"\r\n                placeholder=\"Enter Your Password\"\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n              />\r\n              <span style={{ color: \"red\" }}>{this.state.errors.pass}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-4\"></label>\r\n            <div className=\"col-8\">\r\n              <input\r\n                id=\"pass\"\r\n                name=\"repass\"\r\n                placeholder=\"Repeat Your Password\"\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n              />\r\n              <span style={{ color: \"red\" }}>{this.state.errors.repass}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <div className=\"offset-4 col-8\">\r\n              <button name=\"submit\" type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}